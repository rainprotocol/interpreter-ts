/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReserveTokenERC20Snapshot,
  ReserveTokenERC20SnapshotInterface,
} from "../../../../contracts/test/testToken/ReserveTokenERC20Snapshot";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611803806100206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b25780639711715a11610081578063a457c2d711610066578063a457c2d71461022e578063a9059cbb14610241578063dd62ed3e1461025457600080fd5b80639711715a14610213578063981b24d01461021b57600080fd5b806370a08231146101c35780638129fc1c146101f9578063902d55a51461020357806395d89b411461020b57600080fd5b80632e0f2625116100ee5780632e0f262514610186578063313ce5671461018e578063395093511461019d5780634ee2cd7e146101b057600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b600080fd5b61012861029a565b60405161013591906112a3565b60405180910390f35b61015161014c366004611333565b61032c565b6040519015158152602001610135565b6035545b604051908152602001610135565b61015161018136600461135d565b610346565b610165600681565b60405160068152602001610135565b6101516101ab366004611333565b61036a565b6101656101be366004611333565b6103b6565b6101656101d1366004611399565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205490565b610201610429565b005b61016561064c565b610128610666565b610201610675565b6101656102293660046113b4565b61067d565b61015161023c366004611333565b6106a8565b61015161024f366004611333565b610779565b6101656102623660046113cd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b6060603680546102a990611400565b80601f01602080910402602001604051908101604052809291908181526020018280546102d590611400565b80156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b5050505050905090565b60003361033a818585610787565b60019150505b92915050565b60003361035485828561093a565b61035f858585610a11565b506001949350505050565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061033a90829086906103b1908790611482565b610787565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606560205260408120819081906103ea908590610c92565b915091508161041e5773ffffffffffffffffffffffffffffffffffffffff8516600090815260336020526040902054610420565b805b95945050505050565b600054610100900460ff16158080156104495750600054600160ff909116105b806104635750303b158015610463575060005460ff166001145b6104f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561055257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6105c66040518060400160405280600b81526020017f55534420436c61737369630000000000000000000000000000000000000000008152506040518060400160405280600581526020017f5553444343000000000000000000000000000000000000000000000000000000815250610dc9565b6105e6336105d660066009611482565b6105e190600a6115ad565b610e6e565b801561064957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61065860066009611482565b61066390600a6115ad565b81565b6060603780546102a990611400565b610649610f6f565b600080600061068d846066610c92565b915091508161069e576035546106a0565b805b949350505050565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104eb565b61035f8286868403610787565b60003361033a818585610a11565b73ffffffffffffffffffffffffffffffffffffffff8316610829576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104eb565b73ffffffffffffffffffffffffffffffffffffffff82166108cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152603460209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0b57818110156109fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104eb565b610a0b8484848403610787565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610ab4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104eb565b73ffffffffffffffffffffffffffffffffffffffff8216610b57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104eb565b610b62838383610fc9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526033602052604090205481811015610c18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104eb565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c859086815260200190565b60405180910390a3610a0b565b60008060008411610cff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4552433230536e617073686f743a20696420697320300000000000000000000060448201526064016104eb565b610d07611030565b841115610d70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e7420696400000060448201526064016104eb565b6000610d7c8486611040565b84549091508103610d94576000809250925050610dc2565b6001846001018281548110610dab57610dab6115b9565b90600052602060002001549250925050610dc2565b505b9250929050565b600054610100900460ff16610e60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104eb565b610e6a82826110ed565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216610eeb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104eb565b610ef760008383610fc9565b8060356000828254610f099190611482565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610f7f606880546001019055565b6000610f89611030565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6781604051610fbc91815260200190565b60405180910390a1919050565b73ffffffffffffffffffffffffffffffffffffffff8316610ffa57610fed8261119d565b610ff56111dd565b505050565b73ffffffffffffffffffffffffffffffffffffffff821661101e57610fed8361119d565b6110278361119d565b610ff58261119d565b600061103b60685490565b905090565b8154600090810361105357506000610340565b82546000905b808210156110a057600061106d83836111ed565b6000878152602090209091508590820154111561108c5780915061109a565b611097816001611482565b92505b50611059565b6000821180156110cc5750836110c9866110bb6001866115e8565b600091825260209091200190565b54145b156110e5576110dc6001836115e8565b92505050610340565b509050610340565b600054610100900460ff16611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104eb565b60366111908382611678565b506037610ff58282611678565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606560209081526040808320603390925290912054610649919061120f565b61120f565b6111eb60666111d860355490565b565b60006111fc6002848418611792565b61120890848416611482565b9392505050565b6000611219611030565b90508061122584611259565b1015610ff5578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090810361126c57506000919050565b8154829061127c906001906115e8565b8154811061128c5761128c6115b9565b90600052602060002001549050919050565b919050565b600060208083528351808285015260005b818110156112d0578581018301518582016040015282016112b4565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461129e57600080fd5b6000806040838503121561134657600080fd5b61134f8361130f565b946020939093013593505050565b60008060006060848603121561137257600080fd5b61137b8461130f565b92506113896020850161130f565b9150604084013590509250925092565b6000602082840312156113ab57600080fd5b6112088261130f565b6000602082840312156113c657600080fd5b5035919050565b600080604083850312156113e057600080fd5b6113e98361130f565b91506113f76020840161130f565b90509250929050565b600181811c9082168061141457607f821691505b60208210810361144d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561034057610340611453565b600181815b80851115610dc057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156114d4576114d4611453565b808516156114e157918102915b93841c939080029061149a565b6000826114fd57506001610340565b8161150a57506000610340565b8160018114611520576002811461152a57611546565b6001915050610340565b60ff84111561153b5761153b611453565b50506001821b610340565b5060208310610133831016604e8410600b8410161715611569575081810a610340565b6115738383611495565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156115a5576115a5611453565b029392505050565b600061120883836114ee565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8181038181111561034057610340611453565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115610ff557600081815260208120601f850160051c810160208610156116515750805b601f850160051c820191505b818110156116705782815560010161165d565b505050505050565b815167ffffffffffffffff811115611692576116926115fb565b6116a6816116a08454611400565b8461162a565b602080601f8311600181146116f957600084156116c35750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611670565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561174657888601518255948401946001909101908401611727565b508582101561178257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000826117c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220eb8c49f445899173dfad1ec19c621f6f634f9e93b94c552b1dee4a363a61ebfb64736f6c63430008110033";

type ReserveTokenERC20SnapshotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveTokenERC20SnapshotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveTokenERC20Snapshot__factory extends ContractFactory {
  constructor(...args: ReserveTokenERC20SnapshotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReserveTokenERC20Snapshot> {
    return super.deploy(overrides || {}) as Promise<ReserveTokenERC20Snapshot>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReserveTokenERC20Snapshot {
    return super.attach(address) as ReserveTokenERC20Snapshot;
  }
  override connect(signer: Signer): ReserveTokenERC20Snapshot__factory {
    return super.connect(signer) as ReserveTokenERC20Snapshot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveTokenERC20SnapshotInterface {
    return new utils.Interface(_abi) as ReserveTokenERC20SnapshotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveTokenERC20Snapshot {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReserveTokenERC20Snapshot;
  }
}
