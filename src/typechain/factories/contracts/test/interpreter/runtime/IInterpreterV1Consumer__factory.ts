/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  IInterpreterV1Consumer,
  IInterpreterV1ConsumerInterface,
} from "../../../../../contracts/test/interpreter/runtime/IInterpreterV1Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "context_",
        type: "uint256[][]",
      },
    ],
    name: "eval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "StateNamespace",
        name: "namespace_",
        type: "uint256",
      },
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "context_",
        type: "uint256[][]",
      },
    ],
    name: "evalWithNamespace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stack",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stackTop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stateChanges",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "stateChanges_",
        type: "uint256[]",
      },
    ],
    name: "stateChanges",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "StateNamespace",
        name: "namespace_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "stateChanges_",
        type: "uint256[]",
      },
    ],
    name: "stateChangesWithNamespace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d14806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638cfd25691161005b5780638cfd2569146100c8578063977bb925146100d0578063978ecfb7146100e3578063b9e62b74146100f657600080fd5b8063138ef151146100825780634c5963e6146100a057806366ee8357146100b5575b600080fd5b61008a61010c565b6040516100979190610746565b60405180910390f35b6100b36100ae366004610896565b610164565b005b6100b36100c336600461096d565b610246565b61008a61036b565b6100b36100de3660046109ba565b6103c1565b6100b36100f1366004610a1b565b6104e9565b6100fe6105c3565b604051908152602001610097565b6060600080548060200260200160405190810160405280929190818152602001828054801561015a57602002820191906000526020600020905b815481526020019060010190808311610146575b5050505050905090565b60005a6040517fbeb677ed00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff85169063beb677ed906101be9086908690600401610a69565b600060405180830381600087803b1580156101d857600080fd5b505af11580156101ec573d6000803e3d6000fd5b5050505060005a905061023f6040518060400160405280602081526020017f7374617465206368616e6765732077697468206e616d65737061636520676173815250828461023a9190610a8a565b6105f5565b5050505050565b60005a90506000808573ffffffffffffffffffffffffffffffffffffffff166390e7d00b86866040518363ffffffff1660e01b8152600401610289929190610b46565b600060405180830381865afa1580156102a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102ec9190810190610bba565b9150915060005a905061033a6040518060400160405280600881526020017f6576616c20676173000000000000000000000000000000000000000000000000815250828661023a9190610a8a565b825161034d9060009060208601906106ab565b5081516103619060019060208501906106ab565b5050505050505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561015a5760200282019190600052602060002090815481526020019060010190808311610146575050505050905090565b60005a90506000808673ffffffffffffffffffffffffffffffffffffffff1663be6575df8787876040518463ffffffff1660e01b815260040161040693929190610c14565b600060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104699190810190610bba565b9150915060005a90506104b76040518060400160405280601781526020017f6576616c2077697468206e616d65737061636520676173000000000000000000815250828661023a9190610a8a565b82516104ca9060009060208601906106ab565b5081516104de9060019060208501906106ab565b505050505050505050565b60005a6040517fce0dd62800000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff84169063ce0dd62890610541908590600401610746565b600060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b5050505060005a90506105bd6040518060400160405280601181526020017f7374617465206368616e67657320676173000000000000000000000000000000815250828461023a9190610a8a565b50505050565b6000805481906105d590600190610a8a565b815481106105e5576105e5610c3c565b9060005260206000200154905090565b610686828260405160240161060b929190610c6b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905261068a565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280548282559060005260206000209081019282156106e6579160200282015b828111156106e65782518255916020019190600101906106cb565b506106f29291506106f6565b5090565b5b808211156106f257600081556001016106f7565b600081518084526020808501945080840160005b8381101561073b5781518752958201959082019060010161071f565b509495945050505050565b602081526000610759602083018461070b565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461078457600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107ff576107ff610789565b604052919050565b600067ffffffffffffffff82111561082157610821610789565b5060051b60200190565b600082601f83011261083c57600080fd5b8135602061085161084c83610807565b6107b8565b82815260059290921b8401810191818101908684111561087057600080fd5b8286015b8481101561088b5780358352918301918301610874565b509695505050505050565b6000806000606084860312156108ab57600080fd5b6108b484610760565b925060208401359150604084013567ffffffffffffffff8111156108d757600080fd5b6108e38682870161082b565b9150509250925092565b600082601f8301126108fe57600080fd5b8135602061090e61084c83610807565b82815260059290921b8401810191818101908684111561092d57600080fd5b8286015b8481101561088b57803567ffffffffffffffff8111156109515760008081fd5b61095f8986838b010161082b565b845250918301918301610931565b60008060006060848603121561098257600080fd5b61098b84610760565b925060208401359150604084013567ffffffffffffffff8111156109ae57600080fd5b6108e3868287016108ed565b600080600080608085870312156109d057600080fd5b6109d985610760565b93506020850135925060408501359150606085013567ffffffffffffffff811115610a0357600080fd5b610a0f878288016108ed565b91505092959194509250565b60008060408385031215610a2e57600080fd5b610a3783610760565b9150602083013567ffffffffffffffff811115610a5357600080fd5b610a5f8582860161082b565b9150509250929050565b828152604060208201526000610a82604083018461070b565b949350505050565b81810381811115610ac4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600081518084526020808501808196508360051b810191508286016000805b86811015610b38578385038a52825180518087529087019087870190845b81811015610b2357835183529289019291890191600101610b07565b50509a87019a95505091850191600101610ae9565b509298975050505050505050565b828152604060208201526000610a826040830184610aca565b600082601f830112610b7057600080fd5b81516020610b8061084c83610807565b82815260059290921b84018101918181019086841115610b9f57600080fd5b8286015b8481101561088b5780518352918301918301610ba3565b60008060408385031215610bcd57600080fd5b825167ffffffffffffffff80821115610be557600080fd5b610bf186838701610b5f565b93506020850151915080821115610c0757600080fd5b50610a5f85828601610b5f565b838152826020820152606060408201526000610c336060830184610aca565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b604081526000835180604084015260005b81811015610c995760208187018101516060868401015201610c7c565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116840101915050826020830152939250505056fea2646970667358221220d5fe3f0a0d6bdc04e96329dbafbc42b06c8a3d023cdea13c7770c89d0661c8e664736f6c63430008110033";

type IInterpreterV1ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IInterpreterV1ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IInterpreterV1Consumer__factory extends ContractFactory {
  constructor(...args: IInterpreterV1ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IInterpreterV1Consumer> {
    return super.deploy(overrides || {}) as Promise<IInterpreterV1Consumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IInterpreterV1Consumer {
    return super.attach(address) as IInterpreterV1Consumer;
  }
  override connect(signer: Signer): IInterpreterV1Consumer__factory {
    return super.connect(signer) as IInterpreterV1Consumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IInterpreterV1ConsumerInterface {
    return new utils.Interface(_abi) as IInterpreterV1ConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInterpreterV1Consumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInterpreterV1Consumer;
  }
}
