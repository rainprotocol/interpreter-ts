/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  LibEncodedDispatchTest,
  LibEncodedDispatchTestInterface,
} from "../../../../../../contracts/test/interpreter/runtime/LibEncodedDispatch/LibEncodedDispatchTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
    ],
    name: "decode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "SourceIndex",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expressionPointer_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sourceIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxOutputs_",
        type: "uint256",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "EncodedDispatch",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061017b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806361a769001461003b578063c0be5bf514610094575b600080fd5b61005d6100493660046100de565b602081901c9160ff601083901c8116921690565b6040805173ffffffffffffffffffffffffffffffffffffffff90941684526020840192909252908201526060015b60405180910390f35b6100d06100a23660046100f7565b77ffffffffffffffffffffffffffffffffffffffff0000000060209390931b9290921660109190911b171790565b60405190815260200161008b565b6000602082840312156100f057600080fd5b5035919050565b60008060006060848603121561010c57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461013057600080fd5b9560208501359550604090940135939250505056fea26469706673582212208f487ed91b4da9b2c6002ab9fe60f6a74ca414f7c7ed26ace91ab498357427f464736f6c63430008110033";

type LibEncodedDispatchTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibEncodedDispatchTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibEncodedDispatchTest__factory extends ContractFactory {
  constructor(...args: LibEncodedDispatchTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibEncodedDispatchTest> {
    return super.deploy(overrides || {}) as Promise<LibEncodedDispatchTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibEncodedDispatchTest {
    return super.attach(address) as LibEncodedDispatchTest;
  }
  override connect(signer: Signer): LibEncodedDispatchTest__factory {
    return super.connect(signer) as LibEncodedDispatchTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibEncodedDispatchTestInterface {
    return new utils.Interface(_abi) as LibEncodedDispatchTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibEncodedDispatchTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LibEncodedDispatchTest;
  }
}
