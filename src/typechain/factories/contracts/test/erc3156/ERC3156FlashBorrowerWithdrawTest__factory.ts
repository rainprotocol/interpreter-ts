/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC3156FlashBorrowerWithdrawTest,
  ERC3156FlashBorrowerWithdrawTestInterface,
} from "../../../../contracts/test/erc3156/ERC3156FlashBorrowerWithdrawTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "orderbook_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct DepositConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "orderBookDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061057f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b578063253f447f14610060575b600080fd5b61004e61004936600461033b565b610075565b60405190815260200160405180910390f35b61007361006e3660046103e1565b6101e0565b005b6000806100848385018561043e565b604080517f4f266187000000000000000000000000000000000000000000000000000000008152825173ffffffffffffffffffffffffffffffffffffffff166004820152602083015160248201529082015160448201529091503390634f26618790606401600060405180830381600087803b15801561010357600080fd5b505af1158015610117573d6000803e3d6000fd5b50506040517f095ea7b30000000000000000000000000000000000000000000000000000000081523360048201526024810189905273ffffffffffffffffffffffffffffffffffffffff8a16925063095ea7b391506044016020604051808303816000875af115801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b291906104c6565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd998975050505050505050565b6101ed60208201826104ef565b604080517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015291840135602482015291169063095ea7b3906044016020604051808303816000875af1158015610265573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028991906104c6565b506040517fe6b6263600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063e6b62636906102dc90849060040161050a565b600060405180830381600087803b1580156102f657600080fd5b505af115801561030a573d6000803e3d6000fd5b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461033657600080fd5b919050565b60008060008060008060a0878903121561035457600080fd5b61035d87610312565b955061036b60208801610312565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561039657600080fd5b818901915089601f8301126103aa57600080fd5b8135818111156103b957600080fd5b8a60208285010111156103cb57600080fd5b6020830194508093505050509295509295509295565b60008082840360808112156103f557600080fd5b6103fe84610312565b925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561043057600080fd5b506020830190509250929050565b60006060828403121561045057600080fd5b6040516060810181811067ffffffffffffffff8211171561049a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526104a683610312565b815260208301356020820152604083013560408201528091505092915050565b6000602082840312156104d857600080fd5b815180151581146104e857600080fd5b9392505050565b60006020828403121561050157600080fd5b6104e882610312565b6060810173ffffffffffffffffffffffffffffffffffffffff61052c84610312565b16825260208301356020830152604083013560408301529291505056fea2646970667358221220f62854580a412e1ce7bf7353b090e576bd76a0b2aadd21a1a98f7f938f34b08064736f6c63430008110033";

type ERC3156FlashBorrowerWithdrawTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC3156FlashBorrowerWithdrawTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC3156FlashBorrowerWithdrawTest__factory extends ContractFactory {
  constructor(...args: ERC3156FlashBorrowerWithdrawTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC3156FlashBorrowerWithdrawTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC3156FlashBorrowerWithdrawTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC3156FlashBorrowerWithdrawTest {
    return super.attach(address) as ERC3156FlashBorrowerWithdrawTest;
  }
  override connect(signer: Signer): ERC3156FlashBorrowerWithdrawTest__factory {
    return super.connect(signer) as ERC3156FlashBorrowerWithdrawTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC3156FlashBorrowerWithdrawTestInterface {
    return new utils.Interface(
      _abi
    ) as ERC3156FlashBorrowerWithdrawTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC3156FlashBorrowerWithdrawTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC3156FlashBorrowerWithdrawTest;
  }
}
