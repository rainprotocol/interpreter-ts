/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC3156FlashBorrowerBuyTest,
  ERC3156FlashBorrowerBuyTestInterface,
} from "../../../../contracts/test/erc3156/ERC3156FlashBorrowerBuyTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061104a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e3660046107a5565b610055565b60405190815260200160405180910390f35b60008061006483850185610a9a565b905061008873ffffffffffffffffffffffffffffffffffffffff88166001886102e7565b600061009c87670e27c49886e60000610379565b82516040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919250829173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101329190610ceb565b1461019e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f5052455f4255590000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b81516040517f095ea7b30000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af1158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610d04565b506040517ff7ae043a000000000000000000000000000000000000000000000000000000008152339063f7ae043a90610275908590600401610dfe565b60408051808303816000875af1158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b79190610f92565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99a9950505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610374908490610395565b505050565b600061038e8383670de0b6b3a76400006104a1565b9392505050565b60006103f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661056d9092919063ffffffff16565b80519091501561037457808060200190518101906104159190610d04565b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610195565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036104f9578382816104ef576104ef610fb6565b049250505061038e565b80841161050557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b606061057c8484600085610584565b949350505050565b606082471015610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610195565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161063f9190610fe5565b60006040518083038185875af1925050503d806000811461067c576040519150601f19603f3d011682016040523d82523d6000602084013e610681565b606091505b50915091506106928783838761069d565b979650505050505050565b6060831561073357825160000361072c5773ffffffffffffffffffffffffffffffffffffffff85163b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610195565b508161057c565b61057c83838151156107485781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101959190611001565b803573ffffffffffffffffffffffffffffffffffffffff811681146107a057600080fd5b919050565b60008060008060008060a087890312156107be57600080fd5b6107c78761077c565b95506107d56020880161077c565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561080057600080fd5b818901915089601f83011261081457600080fd5b81358181111561082357600080fd5b8a602082850101111561083557600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561089d5761089d61084b565b60405290565b60405160c0810167ffffffffffffffff8111828210171561089d5761089d61084b565b60405160e0810167ffffffffffffffff8111828210171561089d5761089d61084b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109305761093061084b565b604052919050565b600067ffffffffffffffff8211156109525761095261084b565b5060051b60200190565b600082601f83011261096d57600080fd5b8135602061098261097d83610938565b6108e9565b828152606092830285018201928282019190878511156109a157600080fd5b8387015b858110156109ff5781818a0312156109bd5760008081fd5b6109c561087a565b6109ce8261077c565b81528582013560ff811681146109e45760008081fd5b818701526040828101359082015284529284019281016109a5565b5090979650505050505050565b600082601f830112610a1d57600080fd5b813567ffffffffffffffff811115610a3757610a3761084b565b610a6860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016108e9565b818152846020838601011115610a7d57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610aac57600080fd5b67ffffffffffffffff8083351115610ac357600080fd5b8235830160c08186031215610ad757600080fd5b610adf6108a3565b610ae88261077c565b8152610af66020830161077c565b60208201526040820135604082015260608201356060820152608082013560808201528260a08301351115610b2a57600080fd5b60a08201358201915085601f830112610b4257600080fd5b610b4f61097d8335610938565b82358082526020808301929160051b850101881015610b6d57600080fd5b602084015b6020853560051b860101811015610cdb578581351115610b9157600080fd5b803585017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838d03011215610bc857600080fd5b610bd061087a565b8860208401351115610be157600080fd5b6020830135830160e083828f03011215610bfa57600080fd5b610c026108c6565b9250610c106020820161077c565b8352610c1e6040820161077c565b602084015260608101356040840152608081013560608401528960a08201351115610c4857600080fd5b610c5b8d602060a084013584010161095c565b60808401528960c08201351115610c7157600080fd5b610c848d602060c084013584010161095c565b60a08401528960e08201351115610c9a57600080fd5b610cad8d602060e0840135840101610a0c565b60c0840152509081526040828101356020808401919091526060909301359082015284529283019201610b72565b5060a08301525095945050505050565b600060208284031215610cfd57600080fd5b5051919050565b600060208284031215610d1657600080fd5b8151801515811461038e57600080fd5b600081518084526020808501945080840160005b83811015610d85578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff16848901526040908101519088015260609096019590820190600101610d3a565b509495945050505050565b60005b83811015610dab578181015183820152602001610d93565b50506000910152565b60008151808452610dcc816020860160208601610d90565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080835260e0830173ffffffffffffffffffffffffffffffffffffffff80865116838601528286015160408282168188015280880151915060608281890152808901519250826080890152608089015192508260a089015260a0890151925060c080818a01528584518088526101009750878b019150878160051b8c0101898701965060005b82811015610f81577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d8303018452875180518784528a815116888501528a8d8201511660808501528881015160a08501528781015187850152608081015160e080860152610efa610140860182610d26565b905060a08201517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080878403018f880152610f358383610d26565b925089840151935080878403016101208801525050610f548183610db4565b9150508c8201518d850152888201518985015280935050508a880197508a84019350600181019050610e87565b509c9b505050505050505050505050565b60008060408385031215610fa557600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008251610ff7818460208701610d90565b9190910192915050565b60208152600061038e6020830184610db456fea26469706673582212205c85c68ca66ed43ac0ad6ac17a5e120cf38ce986d4a30fb8085a9028bf57a36264736f6c63430008110033";

type ERC3156FlashBorrowerBuyTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC3156FlashBorrowerBuyTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC3156FlashBorrowerBuyTest__factory extends ContractFactory {
  constructor(...args: ERC3156FlashBorrowerBuyTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC3156FlashBorrowerBuyTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC3156FlashBorrowerBuyTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC3156FlashBorrowerBuyTest {
    return super.attach(address) as ERC3156FlashBorrowerBuyTest;
  }
  override connect(signer: Signer): ERC3156FlashBorrowerBuyTest__factory {
    return super.connect(signer) as ERC3156FlashBorrowerBuyTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC3156FlashBorrowerBuyTestInterface {
    return new utils.Interface(_abi) as ERC3156FlashBorrowerBuyTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC3156FlashBorrowerBuyTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC3156FlashBorrowerBuyTest;
  }
}
