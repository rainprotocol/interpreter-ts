/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC3156FlashBorrowerTest,
  ERC3156FlashBorrowerTestInterface,
} from "../../../../contracts/test/erc3156/ERC3156FlashBorrowerTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ad806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e366004610168565b610055565b60405190815260200160405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff861663095ea7b33361007e878961020e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156100ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610112919061024e565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9979650505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461016357600080fd5b919050565b60008060008060008060a0878903121561018157600080fd5b61018a8761013f565b95506101986020880161013f565b94506040870135935060608701359250608087013567ffffffffffffffff808211156101c357600080fd5b818901915089601f8301126101d757600080fd5b8135818111156101e657600080fd5b8a60208285010111156101f857600080fd5b6020830194508093505050509295509295509295565b80820180821115610248577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561026057600080fd5b8151801515811461027057600080fd5b939250505056fea26469706673582212205723f95a189ca92df67fc0baf4f7767b1717b13d31e53ad7fdcb18812e0cb99664736f6c63430008110033";

type ERC3156FlashBorrowerTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC3156FlashBorrowerTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC3156FlashBorrowerTest__factory extends ContractFactory {
  constructor(...args: ERC3156FlashBorrowerTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC3156FlashBorrowerTest> {
    return super.deploy(overrides || {}) as Promise<ERC3156FlashBorrowerTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC3156FlashBorrowerTest {
    return super.attach(address) as ERC3156FlashBorrowerTest;
  }
  override connect(signer: Signer): ERC3156FlashBorrowerTest__factory {
    return super.connect(signer) as ERC3156FlashBorrowerTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC3156FlashBorrowerTestInterface {
    return new utils.Interface(_abi) as ERC3156FlashBorrowerTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC3156FlashBorrowerTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC3156FlashBorrowerTest;
  }
}
